} else {
full.count[[as.character(id)]] <- full.count[[as.character(id)]] + 1/7
}
}
cat(paste(":::::::END year",year,"END:::::::"),append=T,sep="\n",file = "NB_data.txt")
}
legend(x = "topright",legend=feature.name, fill = colours)
if(na.plot){
cat(paste("============ END station",id,"END ============="),append=T,sep="\n",file = "NB_data.txt")
cat(paste("Staion nr ",id),
file = "data.txt",append=T,sep="\n")
#suppressWarnings(write.table(bad_data,file = "data.txt",append=T)) # add labels... somehow
cat(paste("prosent of",id,":",sum(na.count)/(nrow(data_nibio)*4)),
file = "data.txt",append=T,sep="\n")
cat(paste("prosent of",id," for years:"),
file = "data.txt",append=T,sep="\n")
cat(paste0(unlist(na.count.year), collapse = "\n"),
file = "data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(na.matrix.total,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("Total:",sum(diag(na.matrix.total))),file = "NB_data.txt", append =T, sep = "\n")
}
title(main = paste0("NA count of station: ", station_names[as.character(id),],
" id: ",id,
" Total:",sum(diag(na.matrix.total))),
sub = paste0("From date 2014-03-01 to date 2020-10-31")
dev.off()
feature.name = c("TM","RR","TJM10","TJM20")
na.run.tables <- c()
full.count <- c()
notible_run <- 24*7
warning_run <- 8*2 # imputering fra begge ender
cat("Null count of data.",
file = "data.txt",sep="\n")
cat(paste("notable runs,defined by nb length",notible_run,"and warning length",warning_run,"\n###############################"),
file = "NB_data.txt",sep="\n")
station_names <- read.csv(DATA_INFO_NIBIO_FILE,
header=TRUE,
row.names="ID",
colClasses=c(ID="integer",Navn="character"))
na.run.station.year.feature <- list()
sub_set <- unlist(nibio_id)
all.id <- as.numeric(rownames(station_names))
for(id in all.id){
# beginning plot
pdf(file = paste0(ROOT,"plots/plot-",id,"-",station_names[as.character(id),],".pdf"))
plot(NULL,
sub = "hourly time From 2014-03-01 to year 2020-10-31",
xlab="Date", ylab="NA location",
xlim = c(0,5881), ylim = c(2013,2021))
colours <- c(TM ="blue", RR = "red",TJM10 = "green",TJM20 = "orange")
lev <- seq(-1/2,1/2,length.out=5)
names(lev) <- feature.name
numb <- 0
denom <- 0
na.run.count <- matrix(rep(0,length=5880*4),nrow = 5880, ncol = 4)
colnames(na.run.count) <- feature.name
na.count <- c()
na.count.year <- c()
na.matrix.total <- NULL
#na.run.station.year.feature[[as.character(id)]] <- c()
#data_plot <- ggplot(title = paste("NA count of staion:",station_names[as.character(id),],"id:",id))
na.plot <- FALSE
cat(paste("***************","station",id,"***************"),append=T,sep="\n",file = "NB_data.txt")
for(year in seq(2014,2020)){
# Drawing seperating lines
lines(c(0,5880),c(year + 1/2,year + 1/2), col = "black")
#lev <- seq(-1/2,1/2,length.out=5)
#names(lev) <- c("TM","RR","TJM10","TJM20")
#lev
#lev["TJM20"]
#lev[match("TJM20",names(lev))+1]
cat(paste(":::::::year",year,":::::::"),append=T,sep="\n",file = "NB_data.txt")
data_nibio <- suppressWarnings(data.nibio(id,year)) # henter data
data_nibio <- data_nibio[rownames(data_nibio) ,]#> paste0(year,"-04-01"),]
data_nibio_raw <- suppressWarnings(data.nibio(id,
year,
path=paste0(DATA_COLLECTION_NIBIO,
"weather_data_raw_hour_stID%i_y%i.csv"
)
))
data_nibio_raw[!is.na(data_nibio_raw[,"TM"]) & (data_nibio_raw[,"TM"] <= 0),"RR"] <- NA
data_nibio[1:nrow(data_nibio_raw),"RR"] <- data_nibio_raw[1:nrow(data_nibio_raw),"RR"]
#na.run.station.year.feature[[as.character(id)]][[as.character(year)]] <- c()
# Na analesys
cat("--------Matrix representation, and pair NA's---------",append =T,sep="\n\t",file = "NB_data.txt")
data.matrix <- as.matrix(ifelse(is.na(data_nibio),1,0))
data.matrix.sq <- t(data.matrix)%*%data.matrix
if(is.null(na.matrix.total)){
na.matrix.total <- data.matrix.sq
} else {
na.matrix.total <- na.matrix.total + data.matrix.sq
}
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(data.matrix.sq,append =T,file = "NB_data.txt",sep = "\t"))
cat(paste("Total NA:",sum(diag(data.matrix.sq))),file = "NB_data.txt",append=T,sep="\n")
na.check <- is.na(data_nibio)
if(any(na.check)){
if(length(na.count) == 0){
na.count <- ifelse(na.check, 1, 0)
} else {
na.count <- na.count + ifelse(na.check, 1, 0)
}
#na.count.year[[as.character(year)]] <- sum(na.check)/(nrow(data_nibio)*4)
na.plot <- TRUE
for(cols in feature.name){ # checker run for hver kolonne
run_table <- table(NULL)
cat(paste("\n--------------station",id,"year",year,"feature",cols,"--------------"),
file = "NB_data.txt",append=T,sep="\n")
if(sum(na.check[,cols]) > 0){
run_na <- find.na.index.length(na.check[,cols])
#na.run.station.year.feature[[as.character(id)]][[as.character(year)]][[as.character(cols)]] <- table(run_na)
#print(paste("year:",year,"feature:",cols))
#print(run_na)
points(c(0,0,0,0),lev[1:4] + year + 1/8, col = colours)
for(ind in 1:nrow(run_na)){
c <- run_na[ind,"Length"]
dates <- rownames(data_nibio)[c(run_na$First[ind],run_na$Last[ind])]
if(any(is.na(dates))){
print(dates)
}
cat(paste("\t-\t",dates[1],"|->",c,"run",ifelse(c != 1,paste("\t|->",dates[2]),""),"\t"),
file = "NB_data.txt",append=T,sep="")
# plot conditions
if(c == 1){
# plot dot
points(run_na$First[ind],year + lev[cols] + 1/8, col = colours[cols])
} else {
# plot rectangle
rect(run_na$First[ind],year + lev[cols],
run_na$Last[ind],year + lev[match(cols,names(lev))+1],
col = colours[cols], border = NA
)
}
# Write condition
if(c >= notible_run){
cat("(NB!)",file = "NB_data.txt",append=T,sep="\n")
} else if(c > warning_run) {
cat("(Warning)",
file = "NB_data.txt",append=T,sep="\n")
} else {
cat("",
file = "NB_data.txt",append=T,sep="\n")
}
na.run.count[c,cols] <- na.run.count[c,cols] + 1
}
run_table <- t(as.matrix(table(run_na$Length)))
}
cat(paste("\n--------------Total for station",id,"year",year,"in feature",cols,"--------------"),
file = "NB_data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(run_table,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("\t- total :\t",sum(na.check[,cols])),
file = "NB_data.txt",append=T,sep="\n")
}
} else {
cat(paste("\t- year",year,"without NA."),
file = "NB_data.txt",append=T,sep="\n")
if(length(full.count[[as.character(id)]]) == 0){
full.count[[as.character(id)]] <- 1/7
} else {
full.count[[as.character(id)]] <- full.count[[as.character(id)]] + 1/7
}
}
cat(paste(":::::::END year",year,"END:::::::"),append=T,sep="\n",file = "NB_data.txt")
}
legend(x = "topright",legend=feature.name, fill = colours)
if(na.plot){
cat(paste("============ END station",id,"END ============="),append=T,sep="\n",file = "NB_data.txt")
cat(paste("Staion nr ",id),
file = "data.txt",append=T,sep="\n")
#suppressWarnings(write.table(bad_data,file = "data.txt",append=T)) # add labels... somehow
cat(paste("prosent of",id,":",sum(na.count)/(nrow(data_nibio)*4)),
file = "data.txt",append=T,sep="\n")
cat(paste("prosent of",id," for years:"),
file = "data.txt",append=T,sep="\n")
cat(paste0(unlist(na.count.year), collapse = "\n"),
file = "data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(na.matrix.total,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("Total:",sum(diag(na.matrix.total))),file = "NB_data.txt", append =T, sep = "\n")
}
title(main = paste0("NA count of station: ", station_names[as.character(id),],
" id: ",id,
" Total:",sum(diag(na.matrix.total))),
sub = paste0("From date 2014-03-01 to date 2020-10-31"))
dev.off()
}
feature.name = c("TM","RR","TJM10","TJM20")
na.run.tables <- c()
full.count <- c()
notible_run <- 24*7
warning_run <- 8*2 # imputering fra begge ender
cat("Null count of data.",
file = "data.txt",sep="\n")
cat(paste("notable runs,defined by nb length",notible_run,"and warning length",warning_run,"\n###############################"),
file = "NB_data.txt",sep="\n")
station_names <- read.csv(DATA_INFO_NIBIO_FILE,
header=TRUE,
row.names="ID",
colClasses=c(ID="integer",Navn="character"))
na.run.station.year.feature <- list()
sub_set <- unlist(nibio_id)
all.id <- as.numeric(rownames(station_names))
for(id in all.id){
# beginning plot
pdf(file = paste0(ROOT,"plots/plot-",id,"-",station_names[as.character(id),],".pdf"))
plot(NULL,
sub = "hourly time From 2014-03-01 to year 2020-10-31",
xlab="Date", ylab="NA location",
xlim = c(0,5881), ylim = c(2013,2021))
colours <- c(TM ="blue", RR = "red",TJM10 = "green",TJM20 = "orange")
lev <- seq(-1/2,1/2,length.out=5)
names(lev) <- feature.name
numb <- 0
denom <- 0
na.run.count <- matrix(rep(0,length=5880*4),nrow = 5880, ncol = 4)
colnames(na.run.count) <- feature.name
na.count <- c()
na.count.year <- c()
na.matrix.total <- NULL
#na.run.station.year.feature[[as.character(id)]] <- c()
#data_plot <- ggplot(title = paste("NA count of staion:",station_names[as.character(id),],"id:",id))
na.plot <- FALSE
cat(paste("***************","station",id,"***************"),append=T,sep="\n",file = "NB_data.txt")
for(year in seq(2014,2020)){
# Drawing seperating lines
lines(c(0,5880),c(year + 1/2,year + 1/2), col = "black")
#lev <- seq(-1/2,1/2,length.out=5)
#names(lev) <- c("TM","RR","TJM10","TJM20")
#lev
#lev["TJM20"]
#lev[match("TJM20",names(lev))+1]
cat(paste(":::::::year",year,":::::::"),append=T,sep="\n",file = "NB_data.txt")
data_nibio <- suppressWarnings(data.nibio(id,year)) # henter data
data_nibio <- data_nibio[rownames(data_nibio) ,]#> paste0(year,"-04-01"),]
data_nibio_raw <- suppressWarnings(data.nibio(id,
year,
path=paste0(DATA_COLLECTION_NIBIO,
"weather_data_raw_hour_stID%i_y%i.csv"
)
))
data_nibio_raw[!is.na(data_nibio_raw[,"TM"]) & (data_nibio_raw[,"TM"] <= 0),"RR"] <- NA
data_nibio[1:nrow(data_nibio_raw),"RR"] <- data_nibio_raw[1:nrow(data_nibio_raw),"RR"]
#na.run.station.year.feature[[as.character(id)]][[as.character(year)]] <- c()
# Na analesys
cat("--------Matrix representation, and pair NA's---------",append =T,sep="\n\t",file = "NB_data.txt")
data.matrix <- as.matrix(ifelse(is.na(data_nibio),1,0))
data.matrix.sq <- t(data.matrix)%*%data.matrix
if(is.null(na.matrix.total)){
na.matrix.total <- data.matrix.sq
} else {
na.matrix.total <- na.matrix.total + data.matrix.sq
}
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(data.matrix.sq,append =T,file = "NB_data.txt",sep = "\t"))
cat(paste("Total NA:",sum(diag(data.matrix.sq))),file = "NB_data.txt",append=T,sep="\n")
na.check <- is.na(data_nibio)
if(any(na.check)){
if(length(na.count) == 0){
na.count <- ifelse(na.check, 1, 0)
} else {
na.count <- na.count + ifelse(na.check, 1, 0)
}
#na.count.year[[as.character(year)]] <- sum(na.check)/(nrow(data_nibio)*4)
na.plot <- TRUE
for(cols in feature.name){ # checker run for hver kolonne
run_table <- table(NULL)
cat(paste("\n--------------station",id,"year",year,"feature",cols,"--------------"),
file = "NB_data.txt",append=T,sep="\n")
if(sum(na.check[,cols]) > 0){
run_na <- find.na.index.length(na.check[,cols])
#na.run.station.year.feature[[as.character(id)]][[as.character(year)]][[as.character(cols)]] <- table(run_na)
#print(paste("year:",year,"feature:",cols))
#print(run_na)
points(c(0,0,0,0),lev[1:4] + year + 1/8, col = colours)
for(ind in 1:nrow(run_na)){
c <- run_na[ind,"Length"]
dates <- rownames(data_nibio)[c(run_na$First[ind],run_na$Last[ind])]
if(any(is.na(dates))){
print(dates)
}
cat(paste("\t-\t",dates[1],"|->",c,"run",ifelse(c != 1,paste("\t|->",dates[2]),""),"\t"),
file = "NB_data.txt",append=T,sep="")
# plot conditions
if(c == 1){
# plot dot
points(run_na$First[ind],year + lev[cols] + 1/8, col = colours[cols])
} else {
# plot rectangle
rect(run_na$First[ind],year + lev[cols],
run_na$Last[ind],year + lev[match(cols,names(lev))+1],
col = colours[cols], border = NA
)
}
# Write condition
if(c >= notible_run){
cat("(NB!)",file = "NB_data.txt",append=T,sep="\n")
} else if(c > warning_run) {
cat("(Warning)",
file = "NB_data.txt",append=T,sep="\n")
} else {
cat("",
file = "NB_data.txt",append=T,sep="\n")
}
na.run.count[c,cols] <- na.run.count[c,cols] + 1
}
run_table <- t(as.matrix(table(run_na$Length)))
}
cat(paste("\n--------------Total for station",id,"year",year,"in feature",cols,"--------------"),
file = "NB_data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(run_table,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("\t- total :\t",sum(na.check[,cols])),
file = "NB_data.txt",append=T,sep="\n")
}
} else {
cat(paste("\t- year",year,"without NA."),
file = "NB_data.txt",append=T,sep="\n")
if(length(full.count[[as.character(id)]]) == 0){
full.count[[as.character(id)]] <- 1/7
} else {
full.count[[as.character(id)]] <- full.count[[as.character(id)]] + 1/7
}
}
cat(paste(":::::::END year",year,"END:::::::"),append=T,sep="\n",file = "NB_data.txt")
}
legend(x = "topright",legend=feature.name, fill = colours)
if(na.plot){
cat(paste("============ END station",id,"END ============="),append=T,sep="\n",file = "NB_data.txt")
cat(paste("Staion nr ",id),
file = "data.txt",append=T,sep="\n")
#suppressWarnings(write.table(bad_data,file = "data.txt",append=T)) # add labels... somehow
cat(paste("prosent of",id,":",sum(na.count)/(nrow(data_nibio)*4)),
file = "data.txt",append=T,sep="\n")
cat(paste("prosent of",id," for years:"),
file = "data.txt",append=T,sep="\n")
cat(paste0(unlist(na.count.year), collapse = "\n"),
file = "data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(na.matrix.total,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("Total:",sum(diag(na.matrix.total))),file = "NB_data.txt", append =T, sep = "\n")
}
title(main = paste0("NA count of station: ", station_names[as.character(id),],
" id: ",id,
" Total:",sum(diag(na.matrix.total))),
sub = "From date 2014-03-01 to date 2020-10-31")
dev.off()
}
feature.name = c("TM","RR","TJM10","TJM20")
na.run.tables <- c()
full.count <- c()
notible_run <- 24*7
warning_run <- 8*2 # imputering fra begge ender
cat("Null count of data.",
file = "data.txt",sep="\n")
cat(paste("notable runs,defined by nb length",notible_run,"and warning length",warning_run,"\n###############################"),
file = "NB_data.txt",sep="\n")
station_names <- read.csv(DATA_INFO_NIBIO_FILE,
header=TRUE,
row.names="ID",
colClasses=c(ID="integer",Navn="character"))
na.run.station.year.feature <- list()
sub_set <- unlist(nibio_id)
all.id <- as.numeric(rownames(station_names))
for(id in all.id){
# beginning plot
pdf(file = paste0(ROOT,"plots/plot-",id,".pdf"))
plot(NULL,
sub = "hourly time From 2014-03-01 to year 2020-10-31",
xlab="Date", ylab="NA location",
xlim = c(0,5881), ylim = c(2013,2021))
colours <- c(TM ="blue", RR = "red",TJM10 = "green",TJM20 = "orange")
lev <- seq(-1/2,1/2,length.out=5)
names(lev) <- feature.name
numb <- 0
denom <- 0
na.run.count <- matrix(rep(0,length=5880*4),nrow = 5880, ncol = 4)
colnames(na.run.count) <- feature.name
na.count <- c()
na.count.year <- c()
na.matrix.total <- NULL
#na.run.station.year.feature[[as.character(id)]] <- c()
#data_plot <- ggplot(title = paste("NA count of staion:",station_names[as.character(id),],"id:",id))
na.plot <- FALSE
cat(paste("***************","station",id,"***************"),append=T,sep="\n",file = "NB_data.txt")
for(year in seq(2014,2020)){
# Drawing seperating lines
lines(c(0,5880),c(year + 1/2,year + 1/2), col = "black")
#lev <- seq(-1/2,1/2,length.out=5)
#names(lev) <- c("TM","RR","TJM10","TJM20")
#lev
#lev["TJM20"]
#lev[match("TJM20",names(lev))+1]
cat(paste(":::::::year",year,":::::::"),append=T,sep="\n",file = "NB_data.txt")
data_nibio <- suppressWarnings(data.nibio(id,year)) # henter data
data_nibio <- data_nibio[rownames(data_nibio) ,]#> paste0(year,"-04-01"),]
data_nibio_raw <- suppressWarnings(data.nibio(id,
year,
path=paste0(DATA_COLLECTION_NIBIO,
"weather_data_raw_hour_stID%i_y%i.csv"
)
))
data_nibio_raw[!is.na(data_nibio_raw[,"TM"]) & (data_nibio_raw[,"TM"] <= 0),"RR"] <- NA
data_nibio[1:nrow(data_nibio_raw),"RR"] <- data_nibio_raw[1:nrow(data_nibio_raw),"RR"]
#na.run.station.year.feature[[as.character(id)]][[as.character(year)]] <- c()
# Na analesys
cat("--------Matrix representation, and pair NA's---------",append =T,sep="\n\t",file = "NB_data.txt")
data.matrix <- as.matrix(ifelse(is.na(data_nibio),1,0))
data.matrix.sq <- t(data.matrix)%*%data.matrix
if(is.null(na.matrix.total)){
na.matrix.total <- data.matrix.sq
} else {
na.matrix.total <- na.matrix.total + data.matrix.sq
}
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(data.matrix.sq,append =T,file = "NB_data.txt",sep = "\t"))
cat(paste("Total NA:",sum(diag(data.matrix.sq))),file = "NB_data.txt",append=T,sep="\n")
na.check <- is.na(data_nibio)
if(any(na.check)){
if(length(na.count) == 0){
na.count <- ifelse(na.check, 1, 0)
} else {
na.count <- na.count + ifelse(na.check, 1, 0)
}
#na.count.year[[as.character(year)]] <- sum(na.check)/(nrow(data_nibio)*4)
na.plot <- TRUE
for(cols in feature.name){ # checker run for hver kolonne
run_table <- table(NULL)
cat(paste("\n--------------station",id,"year",year,"feature",cols,"--------------"),
file = "NB_data.txt",append=T,sep="\n")
if(sum(na.check[,cols]) > 0){
run_na <- find.na.index.length(na.check[,cols])
#na.run.station.year.feature[[as.character(id)]][[as.character(year)]][[as.character(cols)]] <- table(run_na)
#print(paste("year:",year,"feature:",cols))
#print(run_na)
points(c(0,0,0,0),lev[1:4] + year + 1/8, col = colours)
for(ind in 1:nrow(run_na)){
c <- run_na[ind,"Length"]
dates <- rownames(data_nibio)[c(run_na$First[ind],run_na$Last[ind])]
if(any(is.na(dates))){
print(dates)
}
cat(paste("\t-\t",dates[1],"|->",c,"run",ifelse(c != 1,paste("\t|->",dates[2]),""),"\t"),
file = "NB_data.txt",append=T,sep="")
# plot conditions
if(c == 1){
# plot dot
points(run_na$First[ind],year + lev[cols] + 1/8, col = colours[cols])
} else {
# plot rectangle
rect(run_na$First[ind],year + lev[cols],
run_na$Last[ind],year + lev[match(cols,names(lev))+1],
col = colours[cols], border = NA
)
}
# Write condition
if(c >= notible_run){
cat("(NB!)",file = "NB_data.txt",append=T,sep="\n")
} else if(c > warning_run) {
cat("(Warning)",
file = "NB_data.txt",append=T,sep="\n")
} else {
cat("",
file = "NB_data.txt",append=T,sep="\n")
}
na.run.count[c,cols] <- na.run.count[c,cols] + 1
}
run_table <- t(as.matrix(table(run_na$Length)))
}
cat(paste("\n--------------Total for station",id,"year",year,"in feature",cols,"--------------"),
file = "NB_data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(run_table,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("\t- total :\t",sum(na.check[,cols])),
file = "NB_data.txt",append=T,sep="\n")
}
} else {
cat(paste("\t- year",year,"without NA."),
file = "NB_data.txt",append=T,sep="\n")
if(length(full.count[[as.character(id)]]) == 0){
full.count[[as.character(id)]] <- 1/7
} else {
full.count[[as.character(id)]] <- full.count[[as.character(id)]] + 1/7
}
}
cat(paste(":::::::END year",year,"END:::::::"),append=T,sep="\n",file = "NB_data.txt")
}
legend(x = "topright",legend=feature.name, fill = colours)
if(na.plot){
cat(paste("============ END station",id,"END ============="),append=T,sep="\n",file = "NB_data.txt")
cat(paste("Staion nr ",id),
file = "data.txt",append=T,sep="\n")
#suppressWarnings(write.table(bad_data,file = "data.txt",append=T)) # add labels... somehow
cat(paste("prosent of",id,":",sum(na.count)/(nrow(data_nibio)*4)),
file = "data.txt",append=T,sep="\n")
cat(paste("prosent of",id," for years:"),
file = "data.txt",append=T,sep="\n")
cat(paste0(unlist(na.count.year), collapse = "\n"),
file = "data.txt",append=T,sep="\n")
cat("\t",append=T,file = "NB_data.txt",sep = "\t")
suppressWarnings(write.table(na.matrix.total,file = "NB_data.txt",append=T,sep = "\t"))
cat(paste("Total:",sum(diag(na.matrix.total))),file = "NB_data.txt", append =T, sep = "\n")
}
title(main = paste0("NA count of station: ", station_names[as.character(id),],
" id: ",id,
" Total:",sum(diag(na.matrix.total))))
dev.off()
}
knitr::purl("dataviz_r.Rmd")
setwd("C:/Users/matsh/OneDrive - Norwegian University of Life Sciences/uni/MASTER OPPGAVE/MT24CS/programs/R")
knitr::purl("dataviz_r.Rmd")
